/*! lozad.js - v1.16.0 - 2020-09-10
* https://github.com/ApoorvSaxena/lozad.js
* Copyright (c) 2020 Apoorv Saxena; Licensed MIT */
!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory():"function"==typeof define&&define.amd?define(factory):global.lozad=factory()}(this,(function(){"use strict";var isIE="undefined"!=typeof document&&document.documentMode,support=function support(type){return window&&window[type]},validAttribute=["data-iesrc","data-alt","data-src","data-srcset","data-background-image","data-toggle-class"],defaultConfig={rootMargin:"0px",threshold:0,enableAutoReload:!1,load:function load(element){if("picture"===element.nodeName.toLowerCase()){var img=element.querySelector("img"),append=!1;null===img&&(img=document.createElement("img"),append=!0),isIE&&element.getAttribute("data-iesrc")&&(img.src=element.getAttribute("data-iesrc")),element.getAttribute("data-alt")&&(img.alt=element.getAttribute("data-alt")),append&&element.append(img)}if("video"===element.nodeName.toLowerCase()&&!element.getAttribute("data-src")&&element.children){for(var childs=element.children,childSrc=void 0,i=0;i<=childs.length-1;i++)(childSrc=childs[i].getAttribute("data-src"))&&(childs[i].src=childSrc);element.load()}element.getAttribute("data-poster")&&(element.poster=element.getAttribute("data-poster")),element.getAttribute("data-src")&&(element.src=element.getAttribute("data-src")),element.getAttribute("data-srcset")&&element.setAttribute("srcset",element.getAttribute("data-srcset"));var backgroundImageDelimiter=",";if(element.getAttribute("data-background-delimiter")&&(backgroundImageDelimiter=element.getAttribute("data-background-delimiter")),element.getAttribute("data-background-image"))element.style.backgroundImage="url('"+element.getAttribute("data-background-image").split(backgroundImageDelimiter).join("'),url('")+"')";else if(element.getAttribute("data-background-image-set")){var imageSetLinks=element.getAttribute("data-background-image-set").split(backgroundImageDelimiter),firstUrlLink=imageSetLinks[0].substr(0,imageSetLinks[0].indexOf(" "))||imageSetLinks[0];firstUrlLink=-1===firstUrlLink.indexOf("url(")?"url("+firstUrlLink+")":firstUrlLink,1===imageSetLinks.length?element.style.backgroundImage=firstUrlLink:element.setAttribute("style",(element.getAttribute("style")||"")+"background-image: "+firstUrlLink+"; background-image: -webkit-image-set("+imageSetLinks+"); background-image: image-set("+imageSetLinks+")")}element.getAttribute("data-toggle-class")&&element.classList.toggle(element.getAttribute("data-toggle-class"))},loaded:function loaded(){}};function markAsLoaded(element){element.setAttribute("data-loaded",!0)}function preLoad(element){element.getAttribute("data-placeholder-background")&&(element.style.background=element.getAttribute("data-placeholder-background"))}var isLoaded=function isLoaded(element){return"true"===element.getAttribute("data-loaded")},onIntersection=function onIntersection(load,loaded){return function(entries,observer){entries.forEach((function(entry){(entry.intersectionRatio>0||entry.isIntersecting)&&(observer.unobserve(entry.target),isLoaded(entry.target)||(load(entry.target),markAsLoaded(entry.target),loaded(entry.target)))}))}},onMutation=function onMutation(load){return function(entries){entries.forEach((function(entry){isLoaded(entry.target)&&"attributes"===entry.type&&validAttribute.indexOf(entry.attributeName)>-1&&load(entry.target)}))}},getElements=function getElements(selector){var root=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return selector instanceof Element?[selector]:selector instanceof NodeList?selector:root.querySelectorAll(selector)};function lozad(){var selector=arguments.length>0&&void 0!==arguments[0]?arguments[0]:".lozad",options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_Object$assign=Object.assign({},defaultConfig,options),root=_Object$assign.root,rootMargin=_Object$assign.rootMargin,threshold=_Object$assign.threshold,enableAutoReload=_Object$assign.enableAutoReload,load=_Object$assign.load,loaded=_Object$assign.loaded,observer=void 0,mutationObserver=void 0;support("IntersectionObserver")&&(observer=new IntersectionObserver(onIntersection(load,loaded),{root:root,rootMargin:rootMargin,threshold:threshold})),support("MutationObserver")&&enableAutoReload&&(mutationObserver=new MutationObserver(onMutation(load,loaded)));for(var elements=getElements(selector,root),i=0;i<elements.length;i++)preLoad(elements[i]);return{observe:function observe(){for(var elements=getElements(selector,root),_i=0;_i<elements.length;_i++)isLoaded(elements[_i])||(observer?(mutationObserver&&enableAutoReload&&mutationObserver.observe(elements[_i],{subtree:!0,attributes:!0,attributeFilter:validAttribute}),observer.observe(elements[_i])):(load(elements[_i]),markAsLoaded(elements[_i]),loaded(elements[_i])))},triggerLoad:function triggerLoad(element){isLoaded(element)||(load(element),markAsLoaded(element),loaded(element))},observer:observer,mutationObserver:mutationObserver}}return lozad}));